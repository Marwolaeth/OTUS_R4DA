---
title: "Shiny in Quarto"
server: shiny
lang: ru
format: # Обязательно нужно установить новую версию Rmarkdown
  html:
    page-layout: full
    theme: united
execute: 
  warning: false
  message: false
---

## О наборе данных

В нашем распоряжении находится подборка объявлений о вакантных рабочих местах с сайта [HeadHunter](https://hh.ru/){target="_blank"} по семи профессиям.

::: {.callout-caution title="Внимание"}
Набор данных содержит устаревшие объявления и предназначен для использования в образовательных целях.
:::

## Распределение заработных плат

В документ Quarto можно включить виджеты ввода и вывода Shiny. Выберите профессию из списка и изучите распределение размеров предлагаемой заработной платы по гистограмме с настраиваемым количеством интервалов:

```{r}
#| label: global
#| context: setup
# `context: setup` является аналогом `global.R` в приложениях Shiny

library(dplyr)
library(arrow)
library(ggplot2)
library(shiny)
db <- open_dataset('data/db/meta')

jobs <- db |>
    distinct(job) |>
    pull(as_vector = TRUE)
```

```{r}
#| panel: sidebar
#| label: input

selectInput(inputId = 'job', label = 'Должность', choices = jobs)

sliderInput(
  'bins',
  'Количество интервалов:', 
  min = 1, max = 50, value = 30
)
```

```{r}
#| panel: center
#| label: output-hist
plotOutput("hist")
```

```{r}
#| context: server
#| label: server
# `context: server` является аналогом `server.R` и функции `server()`

data_filtered <- reactive({
  db |>
  to_duckdb() |>
  filter(job == local(input$job)) |>
  select(salary)
})
  
output$hist <- renderPlot({
  data_filtered() |>
    ggplot(aes(x = salary)) +
    geom_histogram(alpha = .75, fill = '#5c2a96', bins = input$bins) +
    scale_x_continuous('Предлагаемая заработная плата') +
    scale_y_continuous('Кол-во предложений') +
    ggtitle(sprintf('Распределение заработных плат: %s', input$job)) +
    theme_light()
})
```
